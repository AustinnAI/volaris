"""create core tables

Revision ID: 73a17d6b8fc7
Revises: 
Create Date: 2025-10-10 20:56:01.866577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73a17d6b8fc7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tickers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=64), nullable=True),
    sa.Column('sector', sa.String(length=128), nullable=True),
    sa.Column('industry', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickers_symbol'), 'tickers', ['symbol'], unique=True)
    op.create_table('watchlists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('iv_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('as_of', sa.DateTime(timezone=True), nullable=False),
    sa.Column('term', sa.Enum('D7', 'D14', 'D30', 'D60', 'D90', name='ivterm', native_enum=False, length=16), nullable=False),
    sa.Column('implied_vol', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('iv_rank', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('iv_percentile', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('data_provider', sa.Enum('SCHWAB', 'ALPACA', 'TIINGO', 'DATABENTO', 'FINNHUB', name='dataprovider', native_enum=False, length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker_id', 'as_of', 'term', name='uq_iv_metrics_ticker_term')
    )
    op.create_index('ix_iv_metrics_ticker_asof', 'iv_metrics', ['ticker_id', 'as_of'], unique=False)
    op.create_table('market_structure_levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('level_type', sa.Enum('SWING_HIGH', 'SWING_LOW', 'FAIR_VALUE_GAP', 'VWAP', 'EMA_200_TOUCH', 'LIQUIDITY_ZONE', name='marketleveltype', native_enum=False, length=64), nullable=False),
    sa.Column('price', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('detected_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confidence', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_market_levels_ticker_type', 'market_structure_levels', ['ticker_id', 'level_type'], unique=False)
    op.create_table('option_chain_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('as_of', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expiration', sa.Date(), nullable=False),
    sa.Column('dte', sa.Integer(), nullable=False),
    sa.Column('underlying_price', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('data_provider', sa.Enum('SCHWAB', 'ALPACA', 'TIINGO', 'DATABENTO', 'FINNHUB', name='dataprovider', native_enum=False, length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_option_chain_snapshot_ticker_expiration', 'option_chain_snapshots', ['ticker_id', 'expiration'], unique=False)
    op.create_index(op.f('ix_option_chain_snapshots_as_of'), 'option_chain_snapshots', ['as_of'], unique=False)
    op.create_index(op.f('ix_option_chain_snapshots_expiration'), 'option_chain_snapshots', ['expiration'], unique=False)
    op.create_table('price_bars',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('timeframe', sa.Enum('ONE_MINUTE', 'FIVE_MINUTE', 'DAILY', name='timeframe', native_enum=False, length=16), nullable=False),
    sa.Column('open', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('high', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('low', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('close', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('data_provider', sa.Enum('SCHWAB', 'ALPACA', 'TIINGO', 'DATABENTO', 'FINNHUB', name='dataprovider', native_enum=False, length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker_id', 'timestamp', 'timeframe', name='uq_price_bars_ticker_ts_frame')
    )
    op.create_index('ix_price_bars_ticker_timestamp', 'price_bars', ['ticker_id', 'timestamp'], unique=False)
    op.create_table('trade_plans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'CANCELLED', 'COMPLETED', name='tradeplanstatus', native_enum=False, length=32), server_default='draft', nullable=False),
    sa.Column('strategy', sa.Enum('VERTICAL_DEBIT', 'VERTICAL_CREDIT', 'LONG_OPTION', 'SHORT_OPTION', 'IRON_CONDOR', 'CUSTOM', name='strategytype', native_enum=False, length=48), nullable=False),
    sa.Column('bias', sa.Enum('BULLISH', 'BEARISH', 'NEUTRAL', name='tradebias', native_enum=False, length=16), nullable=False),
    sa.Column('thesis', sa.Text(), nullable=True),
    sa.Column('expiration', sa.Date(), nullable=True),
    sa.Column('dte', sa.Integer(), nullable=True),
    sa.Column('entry_price', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('stop_loss', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('target_price', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('max_loss', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('max_profit', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('risk_reward', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('position_size', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_trade_plans_ticker_status', 'trade_plans', ['ticker_id', 'status'], unique=False)
    op.create_table('watchlist_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('watchlist_id', sa.Integer(), nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['watchlist_id'], ['watchlists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('watchlist_id', 'ticker_id', name='uq_watchlist_ticker')
    )
    op.create_index(op.f('ix_watchlist_items_ticker_id'), 'watchlist_items', ['ticker_id'], unique=False)
    op.create_table('option_contracts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('option_type', sa.Enum('CALL', 'PUT', name='optiontype', native_enum=False, length=16), nullable=False),
    sa.Column('strike', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('bid', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('ask', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('last', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('mark', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('open_interest', sa.BigInteger(), nullable=True),
    sa.Column('implied_vol', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('delta', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('gamma', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('theta', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('vega', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('rho', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['snapshot_id'], ['option_chain_snapshots.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snapshot_id', 'option_type', 'strike', name='uq_option_contract_snapshot_strike')
    )
    op.create_index('ix_option_contract_snapshot', 'option_contracts', ['snapshot_id'], unique=False)
    op.create_table('trade_executions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trade_plan_id', sa.Integer(), nullable=True),
    sa.Column('execution_type', sa.Enum('ENTRY', 'EXIT', 'ADJUSTMENT', name='tradeexecutiontype', native_enum=False, length=32), nullable=False),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('fill_price', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('order_id', sa.String(length=64), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['trade_plan_id'], ['trade_plans.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_journal_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trade_plan_id', sa.Integer(), nullable=True),
    sa.Column('execution_id', sa.Integer(), nullable=True),
    sa.Column('sentiment', sa.Enum('POSITIVE', 'NEUTRAL', 'NEGATIVE', name='journalsentiment', native_enum=False, length=16), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=False),
    sa.Column('attachments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['execution_id'], ['trade_executions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['trade_plan_id'], ['trade_plans.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trade_journal_entries')
    op.drop_table('trade_executions')
    op.drop_index('ix_option_contract_snapshot', table_name='option_contracts')
    op.drop_table('option_contracts')
    op.drop_index(op.f('ix_watchlist_items_ticker_id'), table_name='watchlist_items')
    op.drop_table('watchlist_items')
    op.drop_index('ix_trade_plans_ticker_status', table_name='trade_plans')
    op.drop_table('trade_plans')
    op.drop_index('ix_price_bars_ticker_timestamp', table_name='price_bars')
    op.drop_table('price_bars')
    op.drop_index(op.f('ix_option_chain_snapshots_expiration'), table_name='option_chain_snapshots')
    op.drop_index(op.f('ix_option_chain_snapshots_as_of'), table_name='option_chain_snapshots')
    op.drop_index('ix_option_chain_snapshot_ticker_expiration', table_name='option_chain_snapshots')
    op.drop_table('option_chain_snapshots')
    op.drop_index('ix_market_levels_ticker_type', table_name='market_structure_levels')
    op.drop_table('market_structure_levels')
    op.drop_index('ix_iv_metrics_ticker_asof', table_name='iv_metrics')
    op.drop_table('iv_metrics')
    op.drop_table('watchlists')
    op.drop_index(op.f('ix_tickers_symbol'), table_name='tickers')
    op.drop_table('tickers')
    # ### end Alembic commands ###
