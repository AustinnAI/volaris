name: refresh-watchlist

on:
  # schedule:
  #   - cron: "*/15 13-20 * * 1-5"
  workflow_dispatch:
    inputs:
      symbols:
        description: "Optional comma-separated tickers for an ad-hoc refresh override"
        required: false
        default: ""

concurrency:
  group: refresh-watchlist
  cancel-in-progress: true

jobs:
  refresh:
    runs-on: ubuntu-latest
    env:
      API_BASE: https://volaris-yz19.onrender.com
      VOLARIS_API_TOKEN: ${{ secrets.VOLARIS_API_TOKEN }}
    steps:
      - name: Apply random jitter
        shell: bash
        run: |
          sleep $((RANDOM % 90))

      - name: Health check
        shell: bash
        run: |
          set -euo pipefail
          api="${API_BASE%/}"
          curl_opts=(--fail --silent --show-error --retry 3 --retry-delay 5)
          if [ -n "${VOLARIS_API_TOKEN:-}" ]; then
            curl_opts+=(-H "Authorization: Bearer ${VOLARIS_API_TOKEN}")
          fi
          curl "${curl_opts[@]}" "${api}/health" >/dev/null

      - name: Refresh override symbols (manual batch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.symbols != '' }}
        env:
          SYMBOLS_INPUT: ${{ inputs.symbols }}
        shell: bash
        run: |
          set -euo pipefail
          api="${API_BASE%/}"
          curl_opts=(--fail --silent --show-error --retry 3 --retry-delay 5 -H "Content-Type: application/json")
          if [ -n "${VOLARIS_API_TOKEN:-}" ]; then
            curl_opts+=(-H "Authorization: Bearer ${VOLARIS_API_TOKEN}")
          fi
          payload=$(python -c "import json, os, sys; raw=os.environ.get('SYMBOLS_INPUT',''); symbols=[s.strip().upper() for s in raw.replace(';',',').split(',') if s.strip()]; sys.exit('No valid symbols supplied.') if not symbols else json.dump({'symbols': symbols, 'kinds': ['price','options','iv']}, sys.stdout)")
          curl "${curl_opts[@]}" -X POST -d "${payload}" "${api}/api/v1/market/refresh/batch" >/dev/null

      - name: Refresh stored watchlist
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.symbols == '' }}
        shell: bash
        run: |
          set -euo pipefail
          api="${API_BASE%/}"
          curl_opts=(--fail --silent --show-error --retry 3 --retry-delay 5 -H "Content-Type: application/json")
          if [ -n "${VOLARIS_API_TOKEN:-}" ]; then
            curl_opts+=(-H "Authorization: Bearer ${VOLARIS_API_TOKEN}")
          fi
          curl "${curl_opts[@]}" -X POST "${api}/api/v1/market/refresh/watchlist" >/dev/null
