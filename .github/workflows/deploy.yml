name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

env:
  PYTHON_VERSION: '3.11'

jobs:
  deploy:
    name: Deploy to Render/Fly.io
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy notification
        run: |
          echo "Deploying to production..."
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

      # Option 1: Deploy to Render
      # - name: Deploy to Render
      #   env:
      #     RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      #     RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      #   run: |
      #     curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
      #       -H "Authorization: Bearer $RENDER_API_KEY" \
      #       -H "Content-Type: application/json" \
      #       -d '{"clearCache": false}'

      # Option 2: Deploy to Fly.io
      # - name: Setup Flyctl
      #   uses: superfly/flyctl-actions/setup-flyctl@master
      #
      # - name: Deploy to Fly.io
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      #   run: flyctl deploy --remote-only

      - name: Notify Sentry of deployment
        if: always()
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          curl -X POST https://sentry.io/api/0/organizations/$SENTRY_ORG/releases/ \
            -H "Authorization: Bearer $SENTRY_AUTH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"version\": \"${{ github.sha }}\",
              \"projects\": [\"$SENTRY_PROJECT\"]
            }"

      - name: Deployment complete
        run: echo "Deployment completed successfully!"
